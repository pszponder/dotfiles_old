#!/usr/bin/env zsh

# ======================
# ZSH PLUGINS / PACKAGES
# ======================

# +----------------------+
# | ZAP (PLUGIN MANAGER) |
# +----------------------+
# https://www.zapzsh.org/

[ -f "${XDG_DATA_HOME:-$HOME/.local/share}/zap/zap.zsh" ] && source "${XDG_DATA_HOME:-$HOME/
.local/share}/zap/zap.zsh"
plug "zsh-users/zsh-autosuggestions"
plug "zap-zsh/supercharge"
plug "zsh-users/zsh-syntax-highlighting"
plug "zsh-users/zsh-history-substring-search"
plug "Aloxaf/fzf-tab"
plug "kutsan/zsh-system-clipboard"

# Load and initialise completion system
autoload -Uz compinit
compinit

# +---------------------+
# | NIX PACKAGE MANAGER |
# +---------------------+
if [ -e '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh' ]; then
	. '/nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh'
fi

# +--------------------------+
# | HOMEBREW PACKAGE MANAGER |
# +--------------------------+
# https://brew.sh/

# Check the operating system
case $(uname -ms) in
'Darwin x86_64')
	target=darwin-x64
	;;
'Darwin arm64')
	target=darwin-aarch64
	;;
'Linux aarch64' | 'Linux arm64')
	target=linux-aarch64
	;;
'Linux x86_64' | *)
	target=linux-x64
	;;
esac

if [[ $target = "darwin-aarch64" ]]; then
		# macOS specific Homebrew path
		eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ $target = "linux-x64" ]]; then
		# Linux specific Homebrew path
		eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

# +------------------------------+
# | RTX POLYGLOT RUNTIME MANAGER |
# +------------------------------+
eval "$(~/.local/share/rtx/bin/rtx activate zsh)"